name: .NET

on:
  push:
    branches: [ master, ci-cd ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        path: /home/runner/work/bikevision-aspnetcore-webapi/bikevision-aspnetcore-webapi/
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Restore dependencies
      run: dotnet restore $GITHUB_WORKSPACE/BikevisionService/WebAPI
    - name: Build
      run: dotnet build $GITHUB_WORKSPACE/BikevisionService/WebAPI --no-restore -c Release
    - name: Archive build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: builded-project
        path: /home/runner/work/bikevision-aspnetcore-webapi/bikevision-aspnetcore-webapi/BikevisionService/WebAPI
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download builded project
      uses: actions/download-artifact@v2
      with:
        name: builded-project
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Test
      run: dotnet test $GITHUB_WORKSPACE/ --no-build --verbosity normal
  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Download builded project
      uses: actions/download-artifact@v2
      with:
        name: builded-project
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Publish
      run: dotnet publish $GITHUB_WORKSPACE/ -o $GITHUB_WORKSPACE/out
    - name: Archive published project
      uses: actions/upload-artifact@v2
      with:
        name: published-project
        path: /home/runner/work/bikevision-aspnetcore-webapi/bikevision-aspnetcore-webapi/out
  deploy:
    needs: publish
    runs-on: ubuntu-latest
    steps:
    - name: Download published project
      uses: actions/download-artifact@v2
      with:
        name: published-project
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_ADDRESS }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.PRIVATE_SSH_KEY }}
        port: ${{ secrets.PORT }}
        script: whoami
